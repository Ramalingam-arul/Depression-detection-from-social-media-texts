# -*- coding: utf-8 -*-
"""Interface.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cxHdeYgJ6DUfKscEnHaJ3l1C0UcsHwjF
"""

!pip install -qqq ftfy
import warnings
warnings.filterwarnings("ignore")
import pandas as pd
from preprocess import *

"""SELECTING DATASETS"""

ds_all_train = pd.read_csv("/content/drive/MyDrive/Colab Notebooks/Dataset/depression_detection_Modified.csv")

ds_train_dep = ds_all_train[ds_all_train['label']==1]

ds_train_notdep = ds_all_train[ds_all_train['label']==0]

ds_all = ds_train_dep.append(ds_train_notdep)

"""CLEANING OF EYE DATASET"""

ds_text_all_arr = [x for x in ds_all['text']]
ds_label_all_arr = [x for x in ds_all['label']]
(cleaned_ds_text_all_arr, cleaned_ds_labels_all_arr) = cleaning_process(ds_text_all_arr, ds_label_all_arr)

"""BOW for EYE"""

bag_of_words, top_words = bow(cleaned_ds_text_all_arr)

column_words = []
for word in top_words:
  if isinstance(word, tuple):
    column_words.append(" ".join(word))
  else:
    column_words.append(word)

df = pd.DataFrame (bag_of_words, columns = column_words)
print(df.head())

X = df
y = cleaned_ds_labels_all_arr

"""LOGISTIC REGRESSION"""

from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.metrics import f1_score, precision_score, recall_score
from sklearn.linear_model import LogisticRegression

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33)

model = LogisticRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

print(accuracy_score(y_test, y_pred))

"""SAVE MODEL"""

import pickle

filename = 'Final_Model.sav'
pickle.dump(model, open(filename, 'wb'))

"""SAVE TOP WORDS"""

with open(r'top_words.txt', 'w') as fp:
    fp.write("\n".join(str(item) for item in top_words))